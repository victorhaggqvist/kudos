"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),Kudoable=function(){function e(t){if(_classCallCheck(this,e),this.element=document.querySelector(t),null===this.element)throw'Failed to find an element for "'+t+'", check the Kudos readme for help';this.bindEvents(),this.counter=this.element.querySelector(".count .num")}return _createClass(e,[{key:"bindEvents",value:function(){this.element.onmouseover=this.start.bind(this),this.element.onmouseout=this.end.bind(this),this.element.onclick=this.unkudo.bind(this),this.element.ontouchstart=this.start.bind(this),this.element.ontouchend=this.end.bind(this)}},{key:"isKudoable",value:function(){return this.element.classList.contains("kudoable")}},{key:"isKudod",value:function(){return this.element.classList.contains("complete")}},{key:"start",value:function(){return this.isKudoable()&&!this.isKudod()?(this.element.dispatchEvent(new Event("kudo:active")),this.element.classList.add("active"),this.timer=setTimeout(this.complete.bind(this),700)):void 0}},{key:"complete",value:function(){this.end(),this.incrementCount(),this.element.classList.add("complete"),this.element.dispatchEvent(new Event("kudo:added")),void 0!==this.onAddedCallback&&this.onAddedCallback(this.element)}},{key:"end",value:function(){this.isKudoable()&&!this.isKudod()&&(this.element.dispatchEvent(new Event("kudo:inactive")),this.element.classList.remove("active"),null!=this.timer&&clearTimeout(this.timer))}},{key:"unkudo",value:function(e){e.preventDefault(),this.isKudod()&&(this.decrementCount(),this.element.classList.remove("complete"),this.element.dispatchEvent(new Event("kudo:removed")),void 0!==this.onRemovedCallback&&this.onRemovedCallback(this.element))}},{key:"setCount",value:function(e){this.counter.innerHTML=e}},{key:"currentCount",value:function(){return parseInt(this.counter.innerHTML)}},{key:"incrementCount",value:function(){this.setCount(this.currentCount()+1)}},{key:"decrementCount",value:function(){this.setCount(this.currentCount()-1)}},{key:"onAdded",value:function(e){this.onAddedCallback=e}},{key:"onRemoved",value:function(e){this.onRemovedCallback=e}}]),e}();